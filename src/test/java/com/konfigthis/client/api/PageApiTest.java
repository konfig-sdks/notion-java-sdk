/*
 * Notion API
 * Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PageCreateNewPageRequest;
import com.konfigthis.client.model.PageCreateNewPageResponse;
import com.konfigthis.client.model.PageGetPageResponse;
import com.konfigthis.client.model.PageUpdatePropertiesRequest;
import com.konfigthis.client.model.PageUpdatePropertiesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PageApi
 */
@Disabled
public class PageApiTest {

    private static PageApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PageApi(apiClient);
    }

    /**
     * Create a page
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewPageTest() throws ApiException {
        String parent = null;
        String properties = null;
        String notionVersion = null;
        List<String> children = null;
        String icon = null;
        String cover = null;
        PageCreateNewPageResponse response = api.createNewPage(parent, properties, notionVersion)
                .children(children)
                .icon(icon)
                .cover(cover)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a page
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPageTest() throws ApiException {
        String pageId = null;
        String notionVersion = null;
        String filterProperties = null;
        PageGetPageResponse response = api.getPage(pageId, notionVersion)
                .filterProperties(filterProperties)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a page property item
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyItemTest() throws ApiException {
        String pageId = null;
        String propertyId = null;
        Integer pageSize = null;
        String startCursor = null;
        String notionVersion = null;
        String response = api.getPropertyItem(pageId, propertyId)
                .pageSize(pageSize)
                .startCursor(startCursor)
                .notionVersion(notionVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Update page properties
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePropertiesTest() throws ApiException {
        String pageId = null;
        String properties = null;
        Boolean archived = null;
        String icon = null;
        String cover = null;
        String notionVersion = null;
        PageUpdatePropertiesResponse response = api.updateProperties(pageId)
                .properties(properties)
                .archived(archived)
                .icon(icon)
                .cover(cover)
                .notionVersion(notionVersion)
                .execute();
        // TODO: test validations
    }

}
