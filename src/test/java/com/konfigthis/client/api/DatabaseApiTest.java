/*
 * Notion API
 * Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DatabaseCreateNewDatabaseRequest;
import com.konfigthis.client.model.DatabaseExecuteQueryRequest;
import com.konfigthis.client.model.DatabaseExecuteQueryResponse;
import com.konfigthis.client.model.DatabaseGetDatabaseResponse;
import com.konfigthis.client.model.DatabaseUpdateDatabaseRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseApi
 */
@Disabled
public class DatabaseApiTest {

    private static DatabaseApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DatabaseApi(apiClient);
    }

    /**
     * Create a database
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewDatabaseTest() throws ApiException {
        String parent = null;
        String properties = null;
        String notionVersion = null;
        List title = null;
        String response = api.createNewDatabase(parent, properties, notionVersion)
                .title(title)
                .execute();
        // TODO: test validations
    }

    /**
     * Query a database
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeQueryTest() throws ApiException {
        String databaseId = null;
        String notionVersion = null;
        String filter = null;
        List sorts = null;
        String startCursor = null;
        Integer pageSize = null;
        String filterProperties = null;
        DatabaseExecuteQueryResponse response = api.executeQuery(databaseId, notionVersion)
                .filter(filter)
                .sorts(sorts)
                .startCursor(startCursor)
                .pageSize(pageSize)
                .filterProperties(filterProperties)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a database
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatabaseTest() throws ApiException {
        String databaseId = null;
        String notionVersion = null;
        DatabaseGetDatabaseResponse response = api.getDatabase(databaseId, notionVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a database
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDatabaseTest() throws ApiException {
        String databaseId = null;
        List title = null;
        List description = null;
        String properties = null;
        String notionVersion = null;
        String response = api.updateDatabase(databaseId)
                .title(title)
                .description(description)
                .properties(properties)
                .notionVersion(notionVersion)
                .execute();
        // TODO: test validations
    }

}
