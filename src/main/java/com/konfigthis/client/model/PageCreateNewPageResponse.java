/*
 * Notion API
 * Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PageCreateNewPageResponseCover;
import com.konfigthis.client.model.PageCreateNewPageResponseCreatedBy;
import com.konfigthis.client.model.PageCreateNewPageResponseIcon;
import com.konfigthis.client.model.PageCreateNewPageResponseLastEditedBy;
import com.konfigthis.client.model.PageCreateNewPageResponseParent;
import com.konfigthis.client.model.PageCreateNewPageResponseProperties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PageCreateNewPageResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PageCreateNewPageResponse {
  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_LAST_EDITED_TIME = "last_edited_time";
  @SerializedName(SERIALIZED_NAME_LAST_EDITED_TIME)
  private String lastEditedTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private PageCreateNewPageResponseCreatedBy createdBy;

  public static final String SERIALIZED_NAME_LAST_EDITED_BY = "last_edited_by";
  @SerializedName(SERIALIZED_NAME_LAST_EDITED_BY)
  private PageCreateNewPageResponseLastEditedBy lastEditedBy;

  public static final String SERIALIZED_NAME_COVER = "cover";
  @SerializedName(SERIALIZED_NAME_COVER)
  private PageCreateNewPageResponseCover cover;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private PageCreateNewPageResponseIcon icon;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private PageCreateNewPageResponseParent parent;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived = true;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private PageCreateNewPageResponseProperties properties;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public PageCreateNewPageResponse() {
  }

  public PageCreateNewPageResponse _object(String _object) {
    
    
    
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "page", value = "")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    
    this._object = _object;
  }


  public PageCreateNewPageResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "59833787-2cf9-4fdf-8782-e53db20768a5", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public PageCreateNewPageResponse createdTime(String createdTime) {
    
    
    
    
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-01T19:05:00.000Z", value = "")

  public String getCreatedTime() {
    return createdTime;
  }


  public void setCreatedTime(String createdTime) {
    
    
    
    this.createdTime = createdTime;
  }


  public PageCreateNewPageResponse lastEditedTime(String lastEditedTime) {
    
    
    
    
    this.lastEditedTime = lastEditedTime;
    return this;
  }

   /**
   * Get lastEditedTime
   * @return lastEditedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-07-06T19:16:00.000Z", value = "")

  public String getLastEditedTime() {
    return lastEditedTime;
  }


  public void setLastEditedTime(String lastEditedTime) {
    
    
    
    this.lastEditedTime = lastEditedTime;
  }


  public PageCreateNewPageResponse createdBy(PageCreateNewPageResponseCreatedBy createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseCreatedBy getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(PageCreateNewPageResponseCreatedBy createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public PageCreateNewPageResponse lastEditedBy(PageCreateNewPageResponseLastEditedBy lastEditedBy) {
    
    
    
    
    this.lastEditedBy = lastEditedBy;
    return this;
  }

   /**
   * Get lastEditedBy
   * @return lastEditedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseLastEditedBy getLastEditedBy() {
    return lastEditedBy;
  }


  public void setLastEditedBy(PageCreateNewPageResponseLastEditedBy lastEditedBy) {
    
    
    
    this.lastEditedBy = lastEditedBy;
  }


  public PageCreateNewPageResponse cover(PageCreateNewPageResponseCover cover) {
    
    
    
    
    this.cover = cover;
    return this;
  }

   /**
   * Get cover
   * @return cover
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseCover getCover() {
    return cover;
  }


  public void setCover(PageCreateNewPageResponseCover cover) {
    
    
    
    this.cover = cover;
  }


  public PageCreateNewPageResponse icon(PageCreateNewPageResponseIcon icon) {
    
    
    
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseIcon getIcon() {
    return icon;
  }


  public void setIcon(PageCreateNewPageResponseIcon icon) {
    
    
    
    this.icon = icon;
  }


  public PageCreateNewPageResponse parent(PageCreateNewPageResponseParent parent) {
    
    
    
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseParent getParent() {
    return parent;
  }


  public void setParent(PageCreateNewPageResponseParent parent) {
    
    
    
    this.parent = parent;
  }


  public PageCreateNewPageResponse archived(Boolean archived) {
    
    
    
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    
    
    
    this.archived = archived;
  }


  public PageCreateNewPageResponse properties(PageCreateNewPageResponseProperties properties) {
    
    
    
    
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageCreateNewPageResponseProperties getProperties() {
    return properties;
  }


  public void setProperties(PageCreateNewPageResponseProperties properties) {
    
    
    
    this.properties = properties;
  }


  public PageCreateNewPageResponse url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.notion.so/Tuscan-Kale-598337872cf94fdf8782e53db20768a5", value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PageCreateNewPageResponse instance itself
   */
  public PageCreateNewPageResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageCreateNewPageResponse pageCreateNewPageResponse = (PageCreateNewPageResponse) o;
    return Objects.equals(this._object, pageCreateNewPageResponse._object) &&
        Objects.equals(this.id, pageCreateNewPageResponse.id) &&
        Objects.equals(this.createdTime, pageCreateNewPageResponse.createdTime) &&
        Objects.equals(this.lastEditedTime, pageCreateNewPageResponse.lastEditedTime) &&
        Objects.equals(this.createdBy, pageCreateNewPageResponse.createdBy) &&
        Objects.equals(this.lastEditedBy, pageCreateNewPageResponse.lastEditedBy) &&
        Objects.equals(this.cover, pageCreateNewPageResponse.cover) &&
        Objects.equals(this.icon, pageCreateNewPageResponse.icon) &&
        Objects.equals(this.parent, pageCreateNewPageResponse.parent) &&
        Objects.equals(this.archived, pageCreateNewPageResponse.archived) &&
        Objects.equals(this.properties, pageCreateNewPageResponse.properties) &&
        Objects.equals(this.url, pageCreateNewPageResponse.url)&&
        Objects.equals(this.additionalProperties, pageCreateNewPageResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_object, id, createdTime, lastEditedTime, createdBy, lastEditedBy, cover, icon, parent, archived, properties, url, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageCreateNewPageResponse {\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastEditedTime: ").append(toIndentedString(lastEditedTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastEditedBy: ").append(toIndentedString(lastEditedBy)).append("\n");
    sb.append("    cover: ").append(toIndentedString(cover)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("object");
    openapiFields.add("id");
    openapiFields.add("created_time");
    openapiFields.add("last_edited_time");
    openapiFields.add("created_by");
    openapiFields.add("last_edited_by");
    openapiFields.add("cover");
    openapiFields.add("icon");
    openapiFields.add("parent");
    openapiFields.add("archived");
    openapiFields.add("properties");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PageCreateNewPageResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PageCreateNewPageResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PageCreateNewPageResponse is not found in the empty JSON string", PageCreateNewPageResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("created_time") != null && !jsonObj.get("created_time").isJsonNull()) && !jsonObj.get("created_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_time").toString()));
      }
      if ((jsonObj.get("last_edited_time") != null && !jsonObj.get("last_edited_time").isJsonNull()) && !jsonObj.get("last_edited_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_edited_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_edited_time").toString()));
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        PageCreateNewPageResponseCreatedBy.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      }
      // validate the optional field `last_edited_by`
      if (jsonObj.get("last_edited_by") != null && !jsonObj.get("last_edited_by").isJsonNull()) {
        PageCreateNewPageResponseLastEditedBy.validateJsonObject(jsonObj.getAsJsonObject("last_edited_by"));
      }
      // validate the optional field `cover`
      if (jsonObj.get("cover") != null && !jsonObj.get("cover").isJsonNull()) {
        PageCreateNewPageResponseCover.validateJsonObject(jsonObj.getAsJsonObject("cover"));
      }
      // validate the optional field `icon`
      if (jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) {
        PageCreateNewPageResponseIcon.validateJsonObject(jsonObj.getAsJsonObject("icon"));
      }
      // validate the optional field `parent`
      if (jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) {
        PageCreateNewPageResponseParent.validateJsonObject(jsonObj.getAsJsonObject("parent"));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        PageCreateNewPageResponseProperties.validateJsonObject(jsonObj.getAsJsonObject("properties"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PageCreateNewPageResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PageCreateNewPageResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PageCreateNewPageResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PageCreateNewPageResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PageCreateNewPageResponse>() {
           @Override
           public void write(JsonWriter out, PageCreateNewPageResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PageCreateNewPageResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PageCreateNewPageResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PageCreateNewPageResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PageCreateNewPageResponse
  * @throws IOException if the JSON string is invalid with respect to PageCreateNewPageResponse
  */
  public static PageCreateNewPageResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PageCreateNewPageResponse.class);
  }

 /**
  * Convert an instance of PageCreateNewPageResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

