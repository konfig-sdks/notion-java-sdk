/*
 * Notion API
 * Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesCostOfNextTrip;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesDescription;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesFoodGroup;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesInStock;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesLastOrdered;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesName;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesNumberOfMeals;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesPhoto;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesPrice;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesRecipes;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesResponsiblePerson;
import com.konfigthis.client.model.PageUpdatePropertiesResponsePropertiesStoreAvailability;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PageUpdatePropertiesResponseProperties
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PageUpdatePropertiesResponseProperties {
  public static final String SERIALIZED_NAME_STORE_AVAILABILITY = "Store availability";
  @SerializedName(SERIALIZED_NAME_STORE_AVAILABILITY)
  private PageUpdatePropertiesResponsePropertiesStoreAvailability storeAvailability;

  public static final String SERIALIZED_NAME_FOOD_GROUP = "Food group";
  @SerializedName(SERIALIZED_NAME_FOOD_GROUP)
  private PageUpdatePropertiesResponsePropertiesFoodGroup foodGroup;

  public static final String SERIALIZED_NAME_PRICE = "Price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private PageUpdatePropertiesResponsePropertiesPrice price;

  public static final String SERIALIZED_NAME_RESPONSIBLE_PERSON = "Responsible Person";
  @SerializedName(SERIALIZED_NAME_RESPONSIBLE_PERSON)
  private PageUpdatePropertiesResponsePropertiesResponsiblePerson responsiblePerson;

  public static final String SERIALIZED_NAME_LAST_ORDERED = "Last ordered";
  @SerializedName(SERIALIZED_NAME_LAST_ORDERED)
  private PageUpdatePropertiesResponsePropertiesLastOrdered lastOrdered;

  public static final String SERIALIZED_NAME_COST_OF_NEXT_TRIP = "Cost of next trip";
  @SerializedName(SERIALIZED_NAME_COST_OF_NEXT_TRIP)
  private PageUpdatePropertiesResponsePropertiesCostOfNextTrip costOfNextTrip;

  public static final String SERIALIZED_NAME_RECIPES = "Recipes";
  @SerializedName(SERIALIZED_NAME_RECIPES)
  private PageUpdatePropertiesResponsePropertiesRecipes recipes;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private PageUpdatePropertiesResponsePropertiesDescription description;

  public static final String SERIALIZED_NAME_IN_STOCK = "In stock";
  @SerializedName(SERIALIZED_NAME_IN_STOCK)
  private PageUpdatePropertiesResponsePropertiesInStock inStock;

  public static final String SERIALIZED_NAME_NUMBER_OF_MEALS = "Number of meals";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_MEALS)
  private PageUpdatePropertiesResponsePropertiesNumberOfMeals numberOfMeals;

  public static final String SERIALIZED_NAME_PHOTO = "Photo";
  @SerializedName(SERIALIZED_NAME_PHOTO)
  private PageUpdatePropertiesResponsePropertiesPhoto photo;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private PageUpdatePropertiesResponsePropertiesName name;

  public PageUpdatePropertiesResponseProperties() {
  }

  public PageUpdatePropertiesResponseProperties storeAvailability(PageUpdatePropertiesResponsePropertiesStoreAvailability storeAvailability) {
    
    
    
    
    this.storeAvailability = storeAvailability;
    return this;
  }

   /**
   * Get storeAvailability
   * @return storeAvailability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesStoreAvailability getStoreAvailability() {
    return storeAvailability;
  }


  public void setStoreAvailability(PageUpdatePropertiesResponsePropertiesStoreAvailability storeAvailability) {
    
    
    
    this.storeAvailability = storeAvailability;
  }


  public PageUpdatePropertiesResponseProperties foodGroup(PageUpdatePropertiesResponsePropertiesFoodGroup foodGroup) {
    
    
    
    
    this.foodGroup = foodGroup;
    return this;
  }

   /**
   * Get foodGroup
   * @return foodGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesFoodGroup getFoodGroup() {
    return foodGroup;
  }


  public void setFoodGroup(PageUpdatePropertiesResponsePropertiesFoodGroup foodGroup) {
    
    
    
    this.foodGroup = foodGroup;
  }


  public PageUpdatePropertiesResponseProperties price(PageUpdatePropertiesResponsePropertiesPrice price) {
    
    
    
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesPrice getPrice() {
    return price;
  }


  public void setPrice(PageUpdatePropertiesResponsePropertiesPrice price) {
    
    
    
    this.price = price;
  }


  public PageUpdatePropertiesResponseProperties responsiblePerson(PageUpdatePropertiesResponsePropertiesResponsiblePerson responsiblePerson) {
    
    
    
    
    this.responsiblePerson = responsiblePerson;
    return this;
  }

   /**
   * Get responsiblePerson
   * @return responsiblePerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesResponsiblePerson getResponsiblePerson() {
    return responsiblePerson;
  }


  public void setResponsiblePerson(PageUpdatePropertiesResponsePropertiesResponsiblePerson responsiblePerson) {
    
    
    
    this.responsiblePerson = responsiblePerson;
  }


  public PageUpdatePropertiesResponseProperties lastOrdered(PageUpdatePropertiesResponsePropertiesLastOrdered lastOrdered) {
    
    
    
    
    this.lastOrdered = lastOrdered;
    return this;
  }

   /**
   * Get lastOrdered
   * @return lastOrdered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesLastOrdered getLastOrdered() {
    return lastOrdered;
  }


  public void setLastOrdered(PageUpdatePropertiesResponsePropertiesLastOrdered lastOrdered) {
    
    
    
    this.lastOrdered = lastOrdered;
  }


  public PageUpdatePropertiesResponseProperties costOfNextTrip(PageUpdatePropertiesResponsePropertiesCostOfNextTrip costOfNextTrip) {
    
    
    
    
    this.costOfNextTrip = costOfNextTrip;
    return this;
  }

   /**
   * Get costOfNextTrip
   * @return costOfNextTrip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesCostOfNextTrip getCostOfNextTrip() {
    return costOfNextTrip;
  }


  public void setCostOfNextTrip(PageUpdatePropertiesResponsePropertiesCostOfNextTrip costOfNextTrip) {
    
    
    
    this.costOfNextTrip = costOfNextTrip;
  }


  public PageUpdatePropertiesResponseProperties recipes(PageUpdatePropertiesResponsePropertiesRecipes recipes) {
    
    
    
    
    this.recipes = recipes;
    return this;
  }

   /**
   * Get recipes
   * @return recipes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesRecipes getRecipes() {
    return recipes;
  }


  public void setRecipes(PageUpdatePropertiesResponsePropertiesRecipes recipes) {
    
    
    
    this.recipes = recipes;
  }


  public PageUpdatePropertiesResponseProperties description(PageUpdatePropertiesResponsePropertiesDescription description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesDescription getDescription() {
    return description;
  }


  public void setDescription(PageUpdatePropertiesResponsePropertiesDescription description) {
    
    
    
    this.description = description;
  }


  public PageUpdatePropertiesResponseProperties inStock(PageUpdatePropertiesResponsePropertiesInStock inStock) {
    
    
    
    
    this.inStock = inStock;
    return this;
  }

   /**
   * Get inStock
   * @return inStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesInStock getInStock() {
    return inStock;
  }


  public void setInStock(PageUpdatePropertiesResponsePropertiesInStock inStock) {
    
    
    
    this.inStock = inStock;
  }


  public PageUpdatePropertiesResponseProperties numberOfMeals(PageUpdatePropertiesResponsePropertiesNumberOfMeals numberOfMeals) {
    
    
    
    
    this.numberOfMeals = numberOfMeals;
    return this;
  }

   /**
   * Get numberOfMeals
   * @return numberOfMeals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesNumberOfMeals getNumberOfMeals() {
    return numberOfMeals;
  }


  public void setNumberOfMeals(PageUpdatePropertiesResponsePropertiesNumberOfMeals numberOfMeals) {
    
    
    
    this.numberOfMeals = numberOfMeals;
  }


  public PageUpdatePropertiesResponseProperties photo(PageUpdatePropertiesResponsePropertiesPhoto photo) {
    
    
    
    
    this.photo = photo;
    return this;
  }

   /**
   * Get photo
   * @return photo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesPhoto getPhoto() {
    return photo;
  }


  public void setPhoto(PageUpdatePropertiesResponsePropertiesPhoto photo) {
    
    
    
    this.photo = photo;
  }


  public PageUpdatePropertiesResponseProperties name(PageUpdatePropertiesResponsePropertiesName name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageUpdatePropertiesResponsePropertiesName getName() {
    return name;
  }


  public void setName(PageUpdatePropertiesResponsePropertiesName name) {
    
    
    
    this.name = name;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PageUpdatePropertiesResponseProperties instance itself
   */
  public PageUpdatePropertiesResponseProperties putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageUpdatePropertiesResponseProperties pageUpdatePropertiesResponseProperties = (PageUpdatePropertiesResponseProperties) o;
    return Objects.equals(this.storeAvailability, pageUpdatePropertiesResponseProperties.storeAvailability) &&
        Objects.equals(this.foodGroup, pageUpdatePropertiesResponseProperties.foodGroup) &&
        Objects.equals(this.price, pageUpdatePropertiesResponseProperties.price) &&
        Objects.equals(this.responsiblePerson, pageUpdatePropertiesResponseProperties.responsiblePerson) &&
        Objects.equals(this.lastOrdered, pageUpdatePropertiesResponseProperties.lastOrdered) &&
        Objects.equals(this.costOfNextTrip, pageUpdatePropertiesResponseProperties.costOfNextTrip) &&
        Objects.equals(this.recipes, pageUpdatePropertiesResponseProperties.recipes) &&
        Objects.equals(this.description, pageUpdatePropertiesResponseProperties.description) &&
        Objects.equals(this.inStock, pageUpdatePropertiesResponseProperties.inStock) &&
        Objects.equals(this.numberOfMeals, pageUpdatePropertiesResponseProperties.numberOfMeals) &&
        Objects.equals(this.photo, pageUpdatePropertiesResponseProperties.photo) &&
        Objects.equals(this.name, pageUpdatePropertiesResponseProperties.name)&&
        Objects.equals(this.additionalProperties, pageUpdatePropertiesResponseProperties.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeAvailability, foodGroup, price, responsiblePerson, lastOrdered, costOfNextTrip, recipes, description, inStock, numberOfMeals, photo, name, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageUpdatePropertiesResponseProperties {\n");
    sb.append("    storeAvailability: ").append(toIndentedString(storeAvailability)).append("\n");
    sb.append("    foodGroup: ").append(toIndentedString(foodGroup)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    responsiblePerson: ").append(toIndentedString(responsiblePerson)).append("\n");
    sb.append("    lastOrdered: ").append(toIndentedString(lastOrdered)).append("\n");
    sb.append("    costOfNextTrip: ").append(toIndentedString(costOfNextTrip)).append("\n");
    sb.append("    recipes: ").append(toIndentedString(recipes)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
    sb.append("    numberOfMeals: ").append(toIndentedString(numberOfMeals)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Store availability");
    openapiFields.add("Food group");
    openapiFields.add("Price");
    openapiFields.add("Responsible Person");
    openapiFields.add("Last ordered");
    openapiFields.add("Cost of next trip");
    openapiFields.add("Recipes");
    openapiFields.add("Description");
    openapiFields.add("In stock");
    openapiFields.add("Number of meals");
    openapiFields.add("Photo");
    openapiFields.add("Name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PageUpdatePropertiesResponseProperties
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PageUpdatePropertiesResponseProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PageUpdatePropertiesResponseProperties is not found in the empty JSON string", PageUpdatePropertiesResponseProperties.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `Store availability`
      if (jsonObj.get("Store availability") != null && !jsonObj.get("Store availability").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesStoreAvailability.validateJsonObject(jsonObj.getAsJsonObject("Store availability"));
      }
      // validate the optional field `Food group`
      if (jsonObj.get("Food group") != null && !jsonObj.get("Food group").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesFoodGroup.validateJsonObject(jsonObj.getAsJsonObject("Food group"));
      }
      // validate the optional field `Price`
      if (jsonObj.get("Price") != null && !jsonObj.get("Price").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesPrice.validateJsonObject(jsonObj.getAsJsonObject("Price"));
      }
      // validate the optional field `Responsible Person`
      if (jsonObj.get("Responsible Person") != null && !jsonObj.get("Responsible Person").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesResponsiblePerson.validateJsonObject(jsonObj.getAsJsonObject("Responsible Person"));
      }
      // validate the optional field `Last ordered`
      if (jsonObj.get("Last ordered") != null && !jsonObj.get("Last ordered").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesLastOrdered.validateJsonObject(jsonObj.getAsJsonObject("Last ordered"));
      }
      // validate the optional field `Cost of next trip`
      if (jsonObj.get("Cost of next trip") != null && !jsonObj.get("Cost of next trip").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesCostOfNextTrip.validateJsonObject(jsonObj.getAsJsonObject("Cost of next trip"));
      }
      // validate the optional field `Recipes`
      if (jsonObj.get("Recipes") != null && !jsonObj.get("Recipes").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesRecipes.validateJsonObject(jsonObj.getAsJsonObject("Recipes"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesDescription.validateJsonObject(jsonObj.getAsJsonObject("Description"));
      }
      // validate the optional field `In stock`
      if (jsonObj.get("In stock") != null && !jsonObj.get("In stock").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesInStock.validateJsonObject(jsonObj.getAsJsonObject("In stock"));
      }
      // validate the optional field `Number of meals`
      if (jsonObj.get("Number of meals") != null && !jsonObj.get("Number of meals").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesNumberOfMeals.validateJsonObject(jsonObj.getAsJsonObject("Number of meals"));
      }
      // validate the optional field `Photo`
      if (jsonObj.get("Photo") != null && !jsonObj.get("Photo").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesPhoto.validateJsonObject(jsonObj.getAsJsonObject("Photo"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        PageUpdatePropertiesResponsePropertiesName.validateJsonObject(jsonObj.getAsJsonObject("Name"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PageUpdatePropertiesResponseProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PageUpdatePropertiesResponseProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PageUpdatePropertiesResponseProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PageUpdatePropertiesResponseProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<PageUpdatePropertiesResponseProperties>() {
           @Override
           public void write(JsonWriter out, PageUpdatePropertiesResponseProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PageUpdatePropertiesResponseProperties read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PageUpdatePropertiesResponseProperties instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PageUpdatePropertiesResponseProperties given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PageUpdatePropertiesResponseProperties
  * @throws IOException if the JSON string is invalid with respect to PageUpdatePropertiesResponseProperties
  */
  public static PageUpdatePropertiesResponseProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PageUpdatePropertiesResponseProperties.class);
  }

 /**
  * Convert an instance of PageUpdatePropertiesResponseProperties to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

